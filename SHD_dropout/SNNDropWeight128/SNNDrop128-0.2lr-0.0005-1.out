/home/venkat/Unreliable_Synaptic_Transmission/Deepti/DOPcodes/SHD_dropout/dataset/shddataset/
made weight variables and loss histogram
Epoch 1: loss=7.50515
Epoch 2: loss=7.79882
Epoch 3: loss=7.76677
Epoch 4: loss=7.94831
Epoch 5: loss=7.37280
Epoch 6: loss=7.88451
Epoch 7: loss=7.20642
Epoch 8: loss=7.61012
Epoch 9: loss=7.43171
Epoch 10: loss=7.74620
Trained for 10 epochs
Training accuracy: 0.040
Epoch 1: loss=3.06544
Epoch 2: loss=3.03626
Epoch 3: loss=3.08585
Epoch 4: loss=3.04871
Epoch 5: loss=3.06925
Epoch 6: loss=3.05429
Epoch 7: loss=3.05452
Epoch 8: loss=3.20878
Epoch 9: loss=3.10580
Epoch 10: loss=3.06376
Epoch 11: loss=3.15017
Epoch 12: loss=3.07225
Epoch 13: loss=3.08554
Epoch 14: loss=3.09916
Epoch 15: loss=3.06374
Epoch 16: loss=3.12554
Epoch 17: loss=3.08962
Epoch 18: loss=3.10878
Epoch 19: loss=3.05656
Epoch 20: loss=3.14204
Epoch 21: loss=3.09189
Epoch 22: loss=3.05157
Epoch 23: loss=3.07103
Epoch 24: loss=3.11027
Epoch 25: loss=3.05364
Epoch 26: loss=3.08923
Epoch 27: loss=3.08211
Epoch 28: loss=3.09114
Epoch 29: loss=3.06958
Epoch 30: loss=3.13065
Epoch 31: loss=3.06573
Epoch 32: loss=3.09375
Epoch 33: loss=3.07406
Epoch 34: loss=3.11381
Epoch 35: loss=3.05580
Epoch 36: loss=3.06491
Epoch 37: loss=3.06360
Epoch 38: loss=3.10406
Epoch 39: loss=3.06592
Epoch 40: loss=3.04359
Epoch 41: loss=3.15440
Epoch 42: loss=3.13314
Epoch 43: loss=3.07381
Epoch 44: loss=3.09863
Epoch 45: loss=3.08218
Epoch 46: loss=3.16196
Epoch 47: loss=3.08696
Epoch 48: loss=3.06049
Epoch 49: loss=3.06230
Epoch 50: loss=3.10953
Epoch 51: loss=3.10469
Epoch 52: loss=3.08810
Epoch 53: loss=3.04081
Epoch 54: loss=3.12835
Epoch 55: loss=3.12969
Epoch 56: loss=3.07428
Epoch 57: loss=3.08998
Epoch 58: loss=3.10208
Epoch 59: loss=3.08910
Epoch 60: loss=3.09437
Epoch 61: loss=3.13587
Epoch 62: loss=3.05554
Epoch 63: loss=3.05139
Epoch 64: loss=3.07743
Epoch 65: loss=3.10667
Epoch 66: loss=3.10815
Epoch 67: loss=3.11574
Epoch 68: loss=3.10963
Epoch 69: loss=3.07551
Epoch 70: loss=3.07641
Epoch 71: loss=3.20297
Epoch 72: loss=3.08906
Epoch 73: loss=3.10514
Epoch 74: loss=3.02051
Epoch 75: loss=3.14486
Epoch 76: loss=3.12205
Epoch 77: loss=3.10772
Epoch 78: loss=3.07128
Epoch 79: loss=3.10877
Epoch 80: loss=3.08222
Epoch 81: loss=3.06701
Epoch 82: loss=3.08438
Epoch 83: loss=3.11017
Epoch 84: loss=3.06879
Epoch 85: loss=3.10909
Epoch 86: loss=3.06101
Epoch 87: loss=3.04798
Epoch 88: loss=3.07880
Epoch 89: loss=3.08866
Epoch 90: loss=3.06796
Epoch 91: loss=3.05566
Epoch 92: loss=3.06272
Epoch 93: loss=3.08271
Epoch 94: loss=3.06991
Epoch 95: loss=3.18175
Epoch 96: loss=3.13095
Epoch 97: loss=3.05906
Epoch 98: loss=3.08452
Epoch 99: loss=3.10130
Epoch 100: loss=3.07642
Training accuracy: 0.040
Test accuracy: 0.040

File list dumped

Saved in file
testff128_dropweights.py:267: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  d1 = torch.tensor(ber1.sample(w1size)).to(device)
testff128_dropweights.py:268: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  d2 = torch.tensor(ber2.sample(w2size)).to(device)
testff128_dropweights.py:270: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  dropw1 = torch.tensor(dropw1 ,requires_grad = True,dtype = datatype ).to(device)
testff128_dropweights.py:272: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  dropw2 = torch.tensor(dropw2 ,requires_grad = True,dtype = datatype ).to(device)
