/home/venkat/Unreliable_Synaptic_Transmission/Deepti/DOPcodes/SHD_dropout/dataset/shddataset/
made weight variables and loss histogram
Epoch 1: loss=8.07877
Epoch 2: loss=8.54827
Epoch 3: loss=8.62121
Epoch 4: loss=8.40954
Epoch 5: loss=8.60006
Epoch 6: loss=8.87242
Epoch 7: loss=8.19258
Epoch 8: loss=8.60347
Epoch 9: loss=10.39237
Epoch 10: loss=8.61926
Trained for 10 epochs
Training accuracy: 0.052
Epoch 1: loss=3.18586
Epoch 2: loss=3.27715
Epoch 3: loss=3.38061
Epoch 4: loss=3.25112
Epoch 5: loss=3.24447
Epoch 6: loss=3.22965
Epoch 7: loss=3.24384
Epoch 8: loss=3.13662
Epoch 9: loss=3.19550
Epoch 10: loss=3.12293
Epoch 11: loss=3.27204
Epoch 12: loss=3.35601
Epoch 13: loss=3.17748
Epoch 14: loss=3.12093
Epoch 15: loss=3.25634
Epoch 16: loss=3.11973
Epoch 17: loss=3.27570
Epoch 18: loss=3.10492
Epoch 19: loss=3.27435
Epoch 20: loss=3.11534
Epoch 21: loss=3.24441
Epoch 22: loss=3.18074
Epoch 23: loss=3.27990
Epoch 24: loss=3.28338
Epoch 25: loss=3.24965
Epoch 26: loss=3.14742
Epoch 27: loss=3.15646
Epoch 28: loss=3.17269
Epoch 29: loss=3.25474
Epoch 30: loss=3.33775
Epoch 31: loss=3.26290
Epoch 32: loss=3.20548
Epoch 33: loss=3.12780
Epoch 34: loss=3.16960
Epoch 35: loss=3.23513
Epoch 36: loss=3.26992
Epoch 37: loss=3.21198
Epoch 38: loss=3.17707
Epoch 39: loss=3.27859
Epoch 40: loss=3.25722
Epoch 41: loss=3.24934
Epoch 42: loss=3.22327
Epoch 43: loss=3.08469
Epoch 44: loss=3.13715
Epoch 45: loss=3.25746
Epoch 46: loss=3.25405
Epoch 47: loss=3.30398
Epoch 48: loss=3.13626
Epoch 49: loss=3.19847
Epoch 50: loss=3.17497
Epoch 51: loss=3.34374
Epoch 52: loss=3.16184
Epoch 53: loss=3.10726
Epoch 54: loss=3.14568
Epoch 55: loss=3.41884
Epoch 56: loss=3.27882
Epoch 57: loss=3.13644
Epoch 58: loss=3.19169
Epoch 59: loss=3.17757
Epoch 60: loss=3.22934
Epoch 61: loss=3.14935
Epoch 62: loss=3.16462
Epoch 63: loss=3.21076
Epoch 64: loss=3.26927
Epoch 65: loss=3.18665
Epoch 66: loss=3.22209
Epoch 67: loss=3.23842
Epoch 68: loss=3.24443
Epoch 69: loss=3.28738
Epoch 70: loss=3.14631
Epoch 71: loss=3.13543
Epoch 72: loss=3.25985
Epoch 73: loss=3.13604
Epoch 74: loss=3.28620
Epoch 75: loss=3.20285
Epoch 76: loss=3.38096
Epoch 77: loss=3.14683
Epoch 78: loss=3.11157
Epoch 79: loss=3.23663
Epoch 80: loss=3.19903
Epoch 81: loss=3.18919
Epoch 82: loss=3.20210
Epoch 83: loss=3.26977
Epoch 84: loss=3.17810
Epoch 85: loss=3.15496
Epoch 86: loss=3.41482
Epoch 87: loss=3.15754
Epoch 88: loss=3.17017
Epoch 89: loss=3.35620
Epoch 90: loss=3.15334
Epoch 91: loss=3.16737
Epoch 92: loss=3.29760
Epoch 93: loss=3.30890
Epoch 94: loss=3.26919
Epoch 95: loss=3.32209
Epoch 96: loss=3.17858
Epoch 97: loss=3.23375
Epoch 98: loss=3.16793
Epoch 99: loss=3.13449
Epoch 100: loss=3.37298
Training accuracy: 0.052
Test accuracy: 0.058

File list dumped

Saved in file
testff256_dropweights.py:267: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  d1 = torch.tensor(ber1.sample(w1size)).to(device)
testff256_dropweights.py:268: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  d2 = torch.tensor(ber2.sample(w2size)).to(device)
testff256_dropweights.py:270: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  dropw1 = torch.tensor(dropw1 ,requires_grad = True,dtype = datatype ).to(device)
testff256_dropweights.py:272: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  dropw2 = torch.tensor(dropw2 ,requires_grad = True,dtype = datatype ).to(device)
